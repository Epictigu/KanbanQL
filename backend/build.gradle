import org.springframework.boot.gradle.tasks.run.BootRun

plugins {
    id 'java'
    id 'org.springframework.boot' version '3.0.5'
    id 'io.spring.dependency-management' version '1.1.0'
}

group = 'de.fhswf.kanbanql'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }

    localH2Implementation.extendsFrom implementation
    localH2RuntimeOnly.extendsFrom runtimeOnly
}

sourceSets {
    localH2 {
        compileClasspath += sourceSets.main.output
        runtimeClasspath += sourceSets.main.output
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-data-rest'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation group: 'javax.xml.bind', name: 'jaxb-api', version: '2.3.0'
    implementation group: 'io.jsonwebtoken', name: 'jjwt', version: '0.9.1'

    implementation group: 'com.google.guava', name: 'guava', version: '31.1-jre'

    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    localH2RuntimeOnly 'com.h2database:h2'
    runtimeOnly 'com.mysql:mysql-connector-j'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
    testImplementation group: 'org.junit.platform', name: 'junit-platform-launcher', version: '1.9.2'
    testImplementation group: 'org.mockito', name: 'mockito-junit-jupiter', version: '5.3.0'
    testImplementation 'com.h2database:h2'
}

configurations.localH2Implementation {
    exclude group: 'com.mysql', module: 'mysql-connector-j'
}

tasks.named("test") {
    useJUnitPlatform()
    systemProperty 'spring.profiles.active', 'dev'
}

tasks.register("runBackend", BootRun.class) {
    group = "kanban-ql"
    setMainClass "de.fhswf.kanbanql.KanbanQLApplication"
    classpath = sourceSets.localH2.runtimeClasspath
    systemProperty 'spring.profiles.active', 'dev'
}
